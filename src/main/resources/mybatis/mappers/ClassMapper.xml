<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hta.lecture.mapper.ClassMapper">
	
	<!-- 강의번호로 강의정보를 조회 -->
	<select id="getClassDetail" parameterType="int" resultType="com.hta.lecture.dto.ClassesDto">
		select
			a.class_no				as no,
			class_title				as title,
			class_content			as content,
			class_difficultly		as difficultly,
			class_image				as image,
			class_video				as video,
			class_income			as income,
			class_period			as period,
			class_price				as price,
			class_discountprice		as discountPrice,
			class_permission		as permission,
			class_filter			as filter,
			class_status			as status,
			class_application_date	as applicationDate,
			class_open_date			as openDate,
			class_updated_date		as updatedDate,
			class_deleted_date		as deletedDate,
			class_total_count		as totalCount,
			class_total_time		as totalTime,
			class_isdeleted			as isDeleted,
			d.teacher_no			as teacherNo,
			teacher_name 			as teacherName,
			b.category_no			as categoryNo,
			category_name 			as categoryName,
			class_uploadfiles 		as uploadfiles
		from
			final_class_tb a, final_category_tb b, final_class_upfiles c, final_teacher_tb d
		where
			a.category_no = b.category_no and a.class_no = c.class_no and a.teacher_no = d.teacher_no
			and a.class_no = #{value}
	</select>
	
	<!-- 회원 번호로 해당 강사의 강의 수를 조회 -->
	<select id="getClassCountByNo" parameterType="int" resultType="int">
		select
			count(*)
		from
			final_class_tb a, final_teacher_tb b
		where
			a.teacher_no = b.teacher_no
			and user_no = #{no}
	</select>
	
	<!-- 회원 번호로 해당 회원(지식공유자)의 전체 강의 정보를 조회 -->
	<select id="getAllClassByNo" parameterType="int" resultType="com.hta.lecture.dto.ClassesDto">
		select
			a.class_no				as no,
			class_title				as title,
			class_content			as content,
			class_difficultly		as difficultly,
			class_image				as image,
			class_video				as video,
			class_income			as income,
			class_period			as period,
			class_price				as price,
			class_discountprice		as discountPrice,
			class_permission		as permission,
			class_filter			as filter,
			class_status			as status,
			class_application_date	as applicationDate,
			class_open_date			as openDate,
			class_updated_date		as updatedDate,
			class_deleted_date		as deletedDate,
			class_total_count		as totalCount,
			class_total_time		as totalTime,
			class_isdeleted			as isDeleted,
			d.teacher_no			as teacherNo,
			teacher_name 			as teacherName,
			b.category_no			as categoryNo,
			category_name 			as categoryName,
			class_uploadfiles 		as uploadfiles
		from
			final_class_tb a, final_category_tb b, final_class_upfiles c, final_teacher_tb d, final_user_tb e
		where
			a.category_no = b.category_no and a.class_no = c.class_no and a.teacher_no = d.teacher_no and d.user_no = e.user_no
			and d.user_no = #{no}
		order by a.class_no asc
	</select>
	
	<!-- 카테고리 번호로 강의정보를 조회 -->
	<select id="getAllCourseInfo" parameterType="com.hta.lecture.web.form.ClassCriteria" resultType="com.hta.lecture.dto.ClassCourseDto">
      select
         class_no as no,
         class_title as title,
         teacher_name as name,
         class_price as price,
         class_discountprice as discountPrice,
         class_image as image,
         class_total_student as studentCount,
         class_review_score_count as reviewCount,
         category_no as categoryNo,
         category_name as categoryName,
         category_par_no as categoryParNo,
         class_uploadfiles as uploadfiles
      from
         (
         select
            row_number() over (order by class_no desc) rn,
                A.*
         from
            (select
                    distinct A.class_no,
                  A.class_title,
                  B.teacher_name,
                  A.class_price,
                  A.class_discountprice,
                  A.class_image,
                  A.class_total_student,
                  A.class_review_score_count,
                  C.category_no,
                  C.category_name,
                  C.category_par_no,
                  D.class_uploadfiles
                from
                    final_class_tb A, final_teacher_tb B, final_category_tb C, final_class_upfiles D
                where
                    A.teacher_no = B.teacher_no and A.category_no = C.category_no and A.class_no = D.class_no
                    <if test="category != null">
                      start with C.category_name = #{category}
                      connect by prior C.category_no = C.category_par_no
                    </if>
                ) A   
         where
            class_title like '%' || #{value} || '%' OR
            teacher_name like '%' || #{value} || '%'
         <if test="sort == 'price'">
         order by class_price asc
         </if>
         <if test="sort == 'studentCount'">
         order by class_total_student desc
         </if>
         <if test="sort == 'grade'">
         order by class_review_score_count desc
         </if>
         )
      where
         rn between #{beginIndex} and #{endIndex}
   </select>
	
	<!-- criteria 정보로 class 검색 결과를 조회 -->
	<select id="getClassSearch" parameterType="com.hta.lecture.web.form.ClassCriteria" resultType="com.hta.lecture.dto.ClassDetailDto">
		select
			class_no				as no,
			class_title				as title,
			class_difficultly		as difficultly,
			class_image				as image,
			class_video				as video,
			class_income			as income,
			class_period			as period,
			class_price				as price,
			class_discountprice		as discountPrice,
			class_permission		as permission,
			class_filter			as filter,
			class_status			as status,
			class_application_date	as applicationDate,
			class_open_date			as openDate,
			class_updated_date		as updatedDate,
			class_deleted_date		as deletedDate,
			class_total_count		as totalCount,
			class_total_time		as totalTime,
			class_isdeleted			as isDeleted,
			teacher_no				as teacherNo,
			teacher_name 			as teacherName,
			category_no				as categoryNo,
			category_name 			as categoryName,
			category_par_no 		as categoryParNo
		from 
         (
			select
				row_number() over (order by class_no desc) rn,
                A.*
			from
				(select
                    distinct A.class_no,
					A.class_title,
					A.class_difficultly,
					A.class_image,	
					A.class_video,
					A.class_income,
					A.class_period,
					A.class_price,
					A.class_discountprice,
					A.class_permission,
					A.class_filter,
					A.class_status,
					A.class_application_date,
					A.class_open_date,
					A.class_updated_date,
					A.class_deleted_date,
					A.class_total_count,
					A.class_total_time,
					A.class_isdeleted,
					B.teacher_no,
					B.teacher_name,
					C.category_no,
					C.category_name,
					C.category_par_no
                from
                    final_class_tb A, final_teacher_tb B, final_category_tb C
				where
                    A.teacher_no = B.teacher_no and A.category_no = C.category_no
                    <if test="category != null">
		                start with C.category_name = #{category}
		                connect by prior C.category_no = C.category_par_no
                    </if>
                ) A
			where
				class_title like '%' || #{value} || '%' OR
				teacher_name like '%' || #{value} || '%'
         )
      where
         rn between #{beginIndex} and #{endIndex}
	</select>
	
	<!-- 전체 데이터 수를 조회 / value 대입시 해당 조건에 맞는 데이터 수 조회 -->
	<select id="getClassesTotalRows" parameterType="com.hta.lecture.web.form.ClassCriteria" resultType="int">
		select count(*)
		from
		(
			select
                distinct A.class_no,
				A.class_title,
				A.class_difficultly,
				A.class_image,	
				A.class_video,
				A.class_income,
				A.class_period,
				A.class_price,
				A.class_discountprice,
				A.class_permission,
				A.class_filter,
				A.class_status,
				A.class_application_date,
				A.class_open_date,
				A.class_updated_date,
				A.class_deleted_date,
				A.class_total_count,
				A.class_total_time,
				A.class_isdeleted,
				B.teacher_no,
				B.teacher_name,
				C.category_no,
				C.category_name,
				C.category_par_no
		    from final_class_tb A, final_teacher_tb B, final_category_tb C
		    where A.teacher_no = B.teacher_no and A.category_no = C.category_no
		    <if test="category != null">
				start with C.category_name = #{category}
				connect by prior C.category_no = C.category_par_no
			</if>
		) A
		<where>
			<if test="value != null">
				class_title like '%' || #{value} || '%' OR
				teacher_name like '%' || #{value} || '%'
			</if>
		</where>			
	</select>
	
	<!-- 모든 카테고리 정보를 조회하는 쿼리 -->
	<select id="getAllClassCategories" resultType="com.hta.lecture.vo.Category">
		select
		    category_no 										as no,
		    category_name 										as name,
		    category_par_no 									as parentNo,
		    category_grade 										as grade
		from final_category_tb
	</select>
	
	<!-- 최상위 카테고리 정보를 조회하는 쿼리 -->
	<select id="getTopClassCategories" resultType="com.hta.lecture.vo.Category">
		select
		    category_no 										as no,
		    category_name 										as name,
		    category_par_no 									as parentNo,
		    category_grade 										as grade
		from final_category_tb
		where category_par_no is null
	</select>
	
	<!-- 계층별 카테고리 정보를 조회하는 쿼리 -->
	<select id="getAllSubCategories" parameterType="int" resultType="com.hta.lecture.vo.Category">
		select
		    category_no 										as no,
		    category_name 										as name,
		    category_par_no 									as parentNo,
		    category_grade 										as grade
		from final_category_tb
		where category_par_no = #{value}
	</select>
	
	<!-- criteria 정보로 class 검색 결과를 조회 -->
	<select id="getClassByCategory" parameterType="String" resultType="com.hta.lecture.dto.ClassDetailDto">
		select
			class_no				as no,
			class_title				as title,
			class_difficultly		as difficultly,
			class_image				as image,
			class_video				as video,
			class_income			as income,
			class_period			as period,
			class_price				as price,
			class_discountprice		as discountPrice,
			class_permission		as permission,
			class_filter			as filter,
			class_status			as status,
			class_application_date	as applicationDate,
			class_open_date			as openDate,
			class_updated_date		as updatedDate,
			class_deleted_date		as deletedDate,
			class_total_count		as totalCount,
			class_total_time		as totalTime,
			class_isdeleted			as isDeleted,
			teacher_no				as teacherNo,
			teacher_name 			as teacherName,
			category_no				as categoryNo,
			category_name 			as categoryName,
			category_par_no 		as categoryParNo
		from 
	         (
				select
					row_number() over (order by class_no desc) rn,
	                A.*
				from
					(
					select
	                    distinct A.class_no,
						A.class_title,
						A.class_difficultly,
						A.class_image,	
						A.class_video,
						A.class_income,
						A.class_period,
						A.class_price,
						A.class_discountprice,
						A.class_permission,
						A.class_filter,
						A.class_status,
						A.class_application_date,
						A.class_open_date,
						A.class_updated_date,
						A.class_deleted_date,
						A.class_total_count,
						A.class_total_time,
						A.class_isdeleted,
						B.teacher_no,
						B.teacher_name,
						C.category_no,
						C.category_name,
						C.category_par_no
	                from
	                    final_class_tb A, final_teacher_tb B, final_category_tb C
					where
	                    A.teacher_no = B.teacher_no and A.category_no = C.category_no
	                    <if test="category != null">
			                start with C.category_no = #{category}
			                connect by prior C.category_no = C.category_par_no
	                    </if>
	                ) A
	         )
		order by class_no asc
	</select>
	
	<!-- 
		(select class_no, count(*) cnt
		from final_progress_tb
		group by class_no) S,
		(select class_no, ceil(AVG(review_grade)) cnt
		from final_review_tb
		group by class_no) R,
		(select class_no, count(*) cnt
		from final_review_tb
		group by class_no) RC
	-->

	<!-- 강의 만들기 -->
	<insert id="insertClass" parameterType="com.hta.lecture.vo.Classes">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select class_no_seq.nextval
			from dual
		</selectKey>
		insert into Final_Class_TB
			(
           	class_no,				    
			class_title,				    
			class_content,			    
			class_difficultly,
			class_image,
			class_video,
			class_income,
			class_price,
			class_discountPrice,
			class_permission,
			class_filter,
			class_status,
			class_application_date,
			class_open_date,
			class_updated_Date,
			class_deleted_Date,
			class_total_count,
			class_total_time,
			class_isdeleted,
			category_no,
			teacher_no
            )
		values
			(
             #{no}, #{title}, #{content}, #{difficultly}, #{image}, #{video}, #{income}, #{price},
			 #{discountPrice}, 'N', #{filter}, #{status}, #{applicationDate}, #{openDate},
			 #{updatedDate}, #{deletedDate}, #{totalCount}, #{totalTime}, #{isDeleted}, #{categoryNo}, #{teacherNo}
             )
	</insert>
	
	<!-- 첨부파일 저장 -->
	<insert id="insertClassFile" parameterType="com.hta.lecture.vo.ClassFiles">
		insert into FINAL_CLASS_UPFILES
			(class_no, class_uploadFiles)
		values
			(#{no}, #{uploadFiles})	
	</insert>
	
	<!-- 챕터 만들기 -->
	<insert id="insertChapter" parameterType="com.hta.lecture.vo.ClassChapter">
	<selectKey keyProperty="chapterNo" resultType="int" order="BEFORE">
			select chapter_no_seq.nextval
			from dual
	</selectKey>
		insert into FINAL_CHAPTER_TB
			(chapter_no, chapter_title, chapter_content, class_no)
		values
			(#{chapterNo}, #{chapterTitle}, #{chapterContent}, #{no})		
	</insert>
	
	<!-- 커리큘럼 만들기 -->
	<insert id="insertDetail" parameterType="com.hta.lecture.vo.ClassDetail">
	<selectKey keyProperty="detailNo" resultType="int" order="BEFORE">
			select class_detail_no_seq.nextval
			from dual
	</selectKey>
		insert into FINAL_CLASS_DETAIL_TB
			(class_detail_no, class_detail_title, class_detail_content, class_detail_free, chapter_no )
		values
			(#{detailNo}, #{detailTitle}, #{detailContent}, #{detailFree}, #{chapterNo})		
	</insert>
	
	<select id="getClassFilesByClassNo" parameterType="int" resultType="com.hta.lecture.vo.ClassFiles">	
		select
			class_no			 no,
			class_uploadFiles	 uploadFiles
		from
			FINAL_CLASS_UPFILES
		where
			class_no = #{value}
	</select>
	
	<!-- 회원번호로 강사(지식공유자)번호 조회 -->
	<select id="getTeacherNoByUserNo" parameterType="int" resultType="int">
		select
		    b.teacher_no as teacherNo
		from
		    final_user_tb a, final_teacher_tb b
		where
		    a.user_no = b.user_no
		    and a.user_no = #{no}
	</select>
	
	<select id="getChapterByClassNo" parameterType="int" resultType="int">
		select
			B.class_no as no
		from 
			final_class_tb A, final_chapter_tb B	
		where
			A.class_no = B.class_no
			and A.class_no = #{no}	
	</select>
	
	<select id="getChapterDetailByNo" parameterType="int" resultType="int">
		select
			B.chapter_no as chapterNo
		from
			final_chapter_tb A , final_class_detail_tb B
	</select>	

	<!-- 회원번호로 해당 회원이 수강하는 강의 리스트 조회 -->
	<select id="getAllClassToStudentByUserNo" parameterType="int" resultType="com.hta.lecture.vo.Classes">
		select
			b.class_no				as no,
			class_title				as title,
			class_content			as content,
			class_difficultly		as difficultly,
			class_image				as image,
			class_video				as video,
			class_income			as income,
			class_period			as period,
			class_price				as price,
			class_discountprice		as discountPrice,
			class_permission		as permission,
			class_filter			as filter,
			class_status			as status,
			class_application_date	as applicationDate,
			class_open_date			as openDate,
			class_updated_date		as updatedDate,
			class_deleted_date		as deletedDate,
			class_total_count		as totalCount,
			class_total_time		as totalTime,
			class_isdeleted			as isDeleted,
			teacher_no				as teacherNo,
			c.category_no			as categoryNo
		from
			final_user_tb a,final_class_tb b, final_category_tb c, final_progress_tb d
		where
			a.user_no = d.user_no and b.class_no = d.class_no and b.category_no = c.category_no
			and a.user_no = #{no}
	</select>
	
	<!-- 모든 강의를 조회 -->
	<select id="getAllCourseData" resultType="com.hta.lecture.dto.ClassesDto">
    select
		a.class_no				as no,
		class_title				as title,
		class_content			as content,
		class_difficultly		as difficultly,
		class_image				as image,
		class_video				as video,
		class_income			as income,
		class_period			as period,
		class_price				as price,
		class_discountprice		as discountPrice,
		class_permission		as permission,
		class_filter			as filter,
		class_status			as status,
		class_application_date	as applicationDate,
		class_open_date			as openDate,
		class_updated_date		as updatedDate,
		class_deleted_date		as deletedDate,
		class_total_count		as totalCount,
		class_total_time		as totalTime,
		class_isdeleted			as isDeleted,
		d.teacher_no			as teacherNo,
		teacher_name 			as teacherName,
		b.category_no			as categoryNo,
		category_name 			as categoryName,
		class_uploadfiles 		as uploadfiles
	from
		final_class_tb a, final_category_tb b, final_class_upfiles c, final_teacher_tb d
	where
		a.category_no = b.category_no and a.class_no = c.class_no and a.teacher_no = d.teacher_no
   </select>
</mapper>